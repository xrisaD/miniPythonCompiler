/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.node;

import java.util.*;
import minipython.analysis.*;

public final class AParFunc extends PFunc
{
    private PPar _par_;

    public AParFunc()
    {
    }

    public AParFunc(
        PPar _par_)
    {
        setPar(_par_);

    }
    public Object clone()
    {
        return new AParFunc(
            (PPar) cloneNode(_par_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAParFunc(this);
    }

    public PPar getPar()
    {
        return _par_;
    }

    public void setPar(PPar node)
    {
        if(_par_ != null)
        {
            _par_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _par_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_par_);
    }

    void removeChild(Node child)
    {
        if(_par_ == child)
        {
            _par_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_par_ == oldChild)
        {
            setPar((PPar) newChild);
            return;
        }

    }
}
