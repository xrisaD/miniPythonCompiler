/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.node;

import java.util.*;
import minipython.analysis.*;

public final class ACompT extends PCompT
{
    private PCompT _compT_;

    public ACompT()
    {
    }

    public ACompT(
        PCompT _compT_)
    {
        setCompT(_compT_);

    }
    public Object clone()
    {
        return new ACompT(
            (PCompT) cloneNode(_compT_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACompT(this);
    }

    public PCompT getCompT()
    {
        return _compT_;
    }

    public void setCompT(PCompT node)
    {
        if(_compT_ != null)
        {
            _compT_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _compT_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_compT_);
    }

    void removeChild(Node child)
    {
        if(_compT_ == child)
        {
            _compT_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_compT_ == oldChild)
        {
            setCompT((PCompT) newChild);
            return;
        }

    }
}
