/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.node;

import java.util.*;
import minipython.analysis.*;

public final class AFuncSubscription extends PSubscription
{
    private PFunc _func_;

    public AFuncSubscription()
    {
    }

    public AFuncSubscription(
        PFunc _func_)
    {
        setFunc(_func_);

    }
    public Object clone()
    {
        return new AFuncSubscription(
            (PFunc) cloneNode(_func_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFuncSubscription(this);
    }

    public PFunc getFunc()
    {
        return _func_;
    }

    public void setFunc(PFunc node)
    {
        if(_func_ != null)
        {
            _func_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _func_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_func_);
    }

    void removeChild(Node child)
    {
        if(_func_ == child)
        {
            _func_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_func_ == oldChild)
        {
            setFunc((PFunc) newChild);
            return;
        }

    }
}
