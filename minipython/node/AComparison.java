/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.node;

import java.util.*;
import minipython.analysis.*;

public final class AComparison extends PComparison
{
    private PDisjunction _disjunction_;

    public AComparison()
    {
    }

    public AComparison(
        PDisjunction _disjunction_)
    {
        setDisjunction(_disjunction_);

    }
    public Object clone()
    {
        return new AComparison(
            (PDisjunction) cloneNode(_disjunction_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAComparison(this);
    }

    public PDisjunction getDisjunction()
    {
        return _disjunction_;
    }

    public void setDisjunction(PDisjunction node)
    {
        if(_disjunction_ != null)
        {
            _disjunction_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _disjunction_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_disjunction_);
    }

    void removeChild(Node child)
    {
        if(_disjunction_ == child)
        {
            _disjunction_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_disjunction_ == oldChild)
        {
            setDisjunction((PDisjunction) newChild);
            return;
        }

    }
}
